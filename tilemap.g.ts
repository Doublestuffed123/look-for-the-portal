// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 . . . . . . . . . . 2 
2 . 2 . 2 . 2 2 2 2 2 . 2 . . 2 
2 . 2 . 2 . . 2 . . 2 . 2 . . 2 
2 . 2 2 2 . 2 2 2 . 2 . 2 . . 2 
2 . . . . . . . 2 . 2 . 2 2 2 2 
2 2 2 2 2 . . . 2 . 2 . . . . 2 
2 . 2 . 2 2 2 . 2 2 2 2 2 . . 2 
2 . 2 . 2 . 2 . . . . 2 . . 2 2 
2 . . . 2 . 2 . 2 2 . . . . . 2 
2 . 2 . . . . . . 2 2 2 . 2 . 2 
2 . 2 2 2 2 2 2 . 2 . 2 2 2 . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,sprites.castle.tileGrass2,sprites.builtin.forestTiles0,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . 2 2 2 2 2 2 . 2 
2 . 2 2 2 . 2 . 2 2 2 2 2 2 . 2 
2 . 2 . 2 2 2 . . . . . . 2 . 2 
2 . 2 . . . 2 . 2 2 2 2 2 2 . 2 
2 . . . . . . . 2 . . . . . . 2 
2 . 2 2 2 2 2 . 2 2 2 2 2 2 . 2 
2 2 2 . . . . . . . . . . . . 2 
2 . 2 2 2 . 2 . 2 2 2 2 2 2 . 2 
2 . . . . . 2 . 2 . . . . . . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 2 2 
2 . . . . . . . 2 . . . . . . 2 
2 . 2 . . . 2 . 2 2 2 2 2 2 . 2 
2 . 2 2 2 2 2 . 2 . . 2 . 2 . 2 
2 . . . . . . . 2 . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.floorDark0,sprites.dungeon.floorLightMoss,sprites.dungeon.greenOuterNorth0,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 2 . . . . . . . . . . 2 
2 . 2 . 2 . 2 2 2 2 . 2 . . . 2 
2 . . . 2 . 2 . . . . 2 2 2 . 2 
2 . 2 . 2 . 2 . 2 2 2 2 . . . 2 
2 . 2 . 2 . . . 2 2 2 2 . 2 2 2 
2 . 2 . . . 2 . 2 2 2 2 . . . 2 
2 2 2 2 2 . 2 . . . . 2 2 2 . 2 
2 . 2 . 2 . 2 2 2 2 2 2 2 2 . 2 
2 . 2 . 2 . 2 . . 2 2 2 2 2 . 2 
2 . 2 . 2 . 2 . . 2 . . . . . 2 
2 . 2 . 2 2 2 . 2 2 . 2 2 2 . 2 
2 . 2 . . . . . . . . 2 . . . 2 
2 . 2 2 2 2 2 2 2 . 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile1,sprites.builtin.coral0,sprites.builtin.oceanDepths0,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex`1000100002020202020202020202020202020202020103010101010101010101010303020201030101030103010103010101010202010301010304030301030101010302020103030103030101010101030301020201030101010101030301010101010202010103010103010101030301010302020103010101030101010101010103020201030301010303010301010303010202010101010101030101010303030102020101030303010303010103010101020203010101010101010101030103050202030103010303010103030101030302020301030101010101030101010303020201010101010301010101010101010202020202020202020202020202020202`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . . . . . . 2 2 2 
2 . 2 . . 2 . 2 . . 2 . . . . 2 
2 . 2 . . 2 . 2 2 . 2 . . . 2 2 
2 . 2 2 . 2 2 . . . . . 2 2 . 2 
2 . 2 . . . . . 2 2 . . . . . 2 
2 . . 2 . . 2 . . . 2 2 . . 2 2 
2 . 2 . . . 2 . . . . . . . 2 2 
2 . 2 2 . . 2 2 . 2 . . 2 2 . 2 
2 . . . . . . 2 . . . 2 2 2 . 2 
2 . . 2 2 2 . 2 2 . . 2 . . . 2 
2 2 . . . . . . . . . 2 . 2 . 2 
2 2 . 2 . 2 2 . . 2 2 . . 2 2 2 
2 2 . 2 . . . . . 2 . . . 2 2 2 
2 . . . . . 2 . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile5,myTiles.tile6,myTiles.tile7,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 . 2 . 2 2 2 . 2 2 2 . 2 
2 . . 2 . 2 . 2 . . . . . . . 2 
2 . 2 2 . 2 . 2 2 2 . 2 2 2 . 2 
2 . . . . . . . . . . . . 2 . 2 
2 2 . 2 . 2 2 2 . . 2 . 2 2 . 2 
2 . . 2 . . 2 . . . 2 . . . 2 2 
2 2 . 2 . . 2 . . 2 . . . 2 . 2 
2 2 . . . . 2 . . . . . . 2 . 2 
2 2 . 2 . . . . . 2 2 . 2 2 . 2 
2 2 . 2 . 2 2 . 2 2 . . 2 2 . 2 
2 . . 2 2 . 2 . . 2 . . 2 . . 2 
2 . . 2 . . . 2 2 2 . . . 2 . 2 
2 . 2 2 2 . 2 2 2 2 2 2 . 2 . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile6,sprites.builtin.brick,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . . . . . . . . 2 
2 . . 2 . . . 2 2 2 2 . 2 2 . 2 
2 . 2 . . . 2 2 . . 2 . . 2 . 2 
2 . . 2 . . . . 2 . 2 2 . . . 2 
2 . 2 . . 2 2 . 2 . 2 2 . 2 2 2 
2 . . 2 . 2 . . . . 2 . . . 2 2 
2 . 2 . . 2 . . . . 2 . 2 . 2 2 
2 . 2 . . 2 . . 2 . . . 2 . 2 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 . . 2 
2 . 2 . . . . . 2 . 2 . . . . 2 
2 . . . . 2 . . . 2 2 2 2 2 . 2 
2 . 2 . . 2 . . 2 2 . 2 . . . 2 
2 . 2 . 2 2 2 2 . 2 2 . 2 2 . 2 
2 2 2 . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile3,myTiles.tile8,myTiles.tile5,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . 2 2 . . . . . . . 2 
2 . 2 . 2 2 2 . . 2 . . 2 . . 2 
2 . 2 . . . 2 . . 2 2 . 2 . . 2 
2 . 2 2 . 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . . . 2 2 . . . 2 
2 . 2 . . . . . 2 2 . 2 2 . 2 2 
2 . 2 . 2 2 . . . 2 . . 2 . 2 2 
2 . . . 2 . . . 2 2 . . 2 . 2 2 
2 . . . 2 . 2 . 2 . . . 2 . . 2 
2 . 2 2 2 2 2 . 2 . 2 2 . . . 2 
2 . 2 . . . . . . 2 2 . . . 2 2 
2 . . 2 . . . . 2 2 . . . 2 2 2 
2 . . 2 2 2 2 2 2 . . . 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorDark0,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010302030303030202020202020303010103020303020205030303030303030101030203030302020203030202020301010302020303020302020303030303010102020202030303030202030203030101030303020203030303020302030301010202030302020203030303020303010103030303030303020202030202030101030203030303030303020303020301010302030202020203030303030303010103020303030203030202020203030101030302030302030303030303030301010303030303020303030402060606010103030303030203030202030303030101010101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 2 2 2 2 2 . . 2 
2 . 2 . . 2 2 . . . . . . . . 2 
2 . 2 . . . 2 2 2 . . 2 2 2 . 2 
2 . 2 2 . . 2 . 2 2 . . . . . 2 
2 2 2 2 2 . . . . 2 2 . 2 . . 2 
2 . . . 2 2 . . . . 2 . 2 . . 2 
2 2 2 . . 2 2 2 . . . . 2 . . 2 
2 . . . . . . . 2 2 2 . 2 2 . 2 
2 . 2 . . . . . . . 2 . . 2 . 2 
2 . 2 . 2 2 2 2 . . . . . . . 2 
2 . 2 . . . 2 . . 2 2 2 2 . . 2 
2 . . 2 . . 2 . . . . . . . . 2 
2 . . . . . 2 . . . . 2 2 2 . 2 
2 . . . . . . . . 2 2 . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile5,sprites.builtin.forestTiles10,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleBlueCrystal,myTiles.tile8], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . 2 . . . 2 . . . 2 2 
2 . 2 . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 . 2 
2 . 2 . . 2 . . . . . . . 2 . 2 
2 . 2 . . . . 2 . . 2 2 2 2 . 2 
2 . 2 . . 2 2 2 . 2 2 . 2 . . 2 
2 2 2 2 . . 2 . . 2 . . 2 2 . 2 
2 . 2 . 2 2 2 2 2 2 2 . 2 . . 2 
2 . 2 . . . . 2 . 2 . . 2 2 . 2 
2 . 2 . . . . 2 . 2 . 2 2 . . 2 
2 . 2 . 2 2 2 2 . 2 . . 2 . . 2 
2 . 2 . . 2 2 2 . 2 2 . 2 . . 2 
2 . 2 . . 2 . . . . . . 2 . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile6,sprites.swamp.swampTile9,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level12":
            case "level12":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . 2 2 . 2 2 2 . . . 2 . 2 
2 . . . . . . . . . 2 . 2 2 . 2 
2 2 2 . . 2 . . 2 . . . . . . 2 
2 . 2 . 2 2 2 2 2 2 2 2 2 . . 2 
2 . 2 . . . . . . 2 . . . 2 . 2 
2 . 2 . 2 . . . . . . . 2 . . 2 
2 . 2 2 2 2 2 . 2 2 . . 2 . 2 2 
2 . . . 2 . . . . 2 . . 2 . 2 2 
2 . 2 2 2 . 2 . . . . . 2 . 2 2 
2 . 2 . 2 . 2 2 2 2 2 . 2 . 2 2 
2 . 2 . . . 2 . . . . . . . . 2 
2 . 2 . 2 2 2 2 2 . 2 2 2 2 . 2 
2 . 2 . 2 . 2 . . . . . . . . 2 
2 . . . . . . . . 2 2 2 2 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.floorDarkDiamond,sprites.dungeon.floorMixed,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000200000000000000000000000100000000020201020202010001000000000000000202010201020200000000000000000002020102020102000000020002000002020202020102020002000000000000000202010201020201000000000002020002020102020202020201010101020202020201020202020102020201010202020202010101010201020102010101020202020202010102010201020102020202020101010101020101010101010101020202020202020202020202020202020202020202020202020202020202020202`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . . . 2 . . . . 2 
2 . 2 . 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 . . . . 2 . . 2 2 . 2 . 2 
2 . 2 . . . 2 2 2 . . 2 . . . 2 
2 . 2 . 2 . . 2 . 2 . . . 2 . 2 
2 . 2 . . 2 . 2 . . . . . 2 . 2 
2 . . . 2 . . 2 . . . 2 . . . 2 
2 . 2 . 2 . . 2 . . . 2 . . . 2 
2 . 2 . . . . . . 2 2 2 2 . . 2 
2 . 2 . . . . 2 . . . 2 2 . . 2 
2 . 2 2 2 2 . 2 . 2 . 2 2 2 . 2 
2 . . . 2 2 . 2 . 2 . 2 . . . 2 
2 2 2 2 2 2 . 2 2 2 2 2 2 2 . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLightMoss,myTiles.tile4], TileScale.Sixteen);
            case "level13":
            case "level13":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . . . . . . 2 . 2 
2 . 2 2 2 2 2 2 2 2 2 2 . 2 2 2 
2 . 2 . . . . . 2 . . 2 . . . 2 
2 . 2 . . . . . . 2 . 2 . 2 . 2 
2 . 2 . . 2 . 2 2 2 . 2 . 2 . 2 
2 . 2 . . 2 . 2 2 . . 2 . 2 2 2 
2 . 2 2 2 2 . 2 2 . 2 2 . 2 . 2 
2 . 2 2 . . . 2 2 . . 2 . . . 2 
2 . . 2 . . . 2 2 . . 2 . 2 2 2 
2 . 2 2 2 . . 2 2 . . 2 . . . 2 
2 . . 2 2 . . . 2 . . 2 2 2 . 2 
2 . . 2 . . 2 . 2 2 . 2 . . . 2 
2 . . 2 . 2 2 2 2 2 . . . 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile8,myTiles.tile7,sprites.castle.tileDarkGrass2,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
            case "level14":
            case "level14":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level15":
            case "level15":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level16":
            case "level16":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 . 2 
2 2 2 . 2 . . . . . . . . . . 2 
2 . . . . . 2 2 2 2 2 . . . . 2 
2 2 2 2 . 2 2 . 2 2 2 . . 2 . 2 
2 . . . . . 2 . 2 . 2 . . 2 2 2 
2 . . . . . . . . . 2 . . . . 2 
2 . 2 2 2 2 2 2 2 2 2 2 . 2 2 2 
2 . 2 . . . 2 . . 2 . 2 . . 2 2 
2 . 2 . . 2 . . 2 2 . 2 . . 2 2 
2 2 2 . . . . . . 2 . 2 . . . 2 
2 . . . . 2 2 . . 2 . . . . 2 2 
2 . . . 2 2 2 . . . . 2 2 . . 2 
2 2 2 . 2 . 2 . . 2 . . 2 . . 2 
2 . . . . . . . 2 . . . 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile8,sprites.dungeon.darkGroundCenter,sprites.dungeon.greenOuterNorth0,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile7":
            case "tile9":return tile9;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
